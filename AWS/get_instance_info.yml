---
  - name: Control AWS instances
    hosts: localhost
    connection: local
    gather_facts: no
    vars:
       region: ''
       servername: ''

    tasks:

    - name: Get instances id with tag {{ servername }} in {{ region }}
      register: instance_info
      amazon.aws.ec2_instance_info:
       region: "{{ region }}"
       filters:
         "tag:Name": "{{ servername }}"
         instance-state-name: [ "running"]
         "tag:Contact": "{{ my_email_address }}"
      
    - name: Printing out instance_info.instances[0].instance_id
      when: instance_info.instances[0].instance_id is defined
      ansible.builtin.debug:
         msg: "{{ instance_info.instances[0].instance_id }}"

    - name: get the Administrator password
      register: admin_passwd
      no_log: true
      ignore_errors: true
      community.aws.ec2_win_password:
        instance_id: "{{ instance_info.instances[0].instance_id }}"
        region: "{{ region }}"
        key_data: "{{ zigfreed_private_key }}"
        wait: true
        wait_timeout: 45

    # Make the admin password available to other playbooks
    - name: Capture the admin password
      no_log: true
      ignore_errors: true
      ansible.builtin.set_stats:
        data:
          my_secret: "{{ admin_passwd.win_password }}"

    - name: Capture public dns name
      ansible.builtin.set_stats:
        data:
          my_server: "{{ instance_info.instances[0].public_dns_name }}"

    - name: Create the host_vars for this servernam
      ansible.builtin.file:
        path: "{{ playbook_dir }}/host_vars/{{ instance_info.instances[0].public_dns_name }}"
        state: directory

    - name: Foobar
      delegate_to: localhost
      ansible.builtin.copy:
        content: "{{
            hostvars
        |   dict2items
        |   selectattr('key', 'in', ansible_play_hosts)
        |   map(attribute='value.some_other_registered_task_output')
        |   join('\n\n')
        }}"
        dest: "{{ playbook_dir }}/host_vars/{{ instance_info.instances[0].public_dns_name }}/output.txt"

    - name: display multiple file contents
      with_file:
        - "/path/to/foo.txt"
      ansible.builtin.debug: var=item
      